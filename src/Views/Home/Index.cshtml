@model Catalog.Models.ProductView
@using Catalog.Helpers

<div class="row">
    <div class="col-md-4">
        <strong>Filter Results By: </strong>
        @foreach (var f in Model.Search.Facets)
        {
            <ul class="list-unstyled">
                <li>
                    @(Html.SolrFieldPropName<Catalog.Models.Product>(f.Key))
                    <ul>
                        <li><span class="fa fa-times-circle"></span><a class="removeFacet" href="@Url.RemoveFacet(f.Key)"> @f.Value</a></li>
                    </ul>
                </li>
            </ul>
        }

        <ul class="list-unstyled">
            @foreach (var f in Model.Facets)
            {
                <li>
                    @{ if (f.Value.Count != 0)
                        {
                            <b>@(Html.SolrFieldPropName<Catalog.Models.Product>(f.Key))</b>
                            <ul>
                                @foreach (var fv in f.Value)
                                {
                                    <li>
                                        <a class="" href="@Url.SetFacet(f.Key, fv.Key)"> @fv.Key <span class="badge">@fv.Value</span></a>
                                    </li>
                                }
                            </ul>
                        }
                    }
                </li>
              }
        </ul>
    </div>
    <div class="col-md-7">
        @using (Html.BeginForm("Index", "Home", FormMethod.Get, new { id = "FreeSearch" }))
        {
            <div class="input-group">
                @Html.TextBox("q", Model.Search.FreeSearch, new { @class = "form-control" })
                <span class="input-group-btn">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </span>
            </div>
            <br />
            if (!string.IsNullOrEmpty(Model.DidYouMean))
            {
                <text>Did you mean</text><strong><em><a href="@Url.ForQuery(Model.DidYouMean)"> @Model.DidYouMean</a></em></strong>
            }
            if (Model.QueryError)
            {
                <span class="error">@Model.ErrorString</span>
            }
        }
        <div class="container-fluid">
            <div id="Header">
                @if (string.IsNullOrEmpty(Model.Search.Sort))
                {
                    <strong>Best Match</strong>
                }
                else
                {
                    <a href="@Url.RemoveParameters("sort")">Best Match</a>
                }
                |
                @if (Model.Search.Sort == "name")
                {
                    <strong>Name</strong>
                }
                else
                {
                    <a href="@Url.SetParameter("sort", "name")">Name</a>
                }
                |
                @if (Model.Search.Sort == "price")
                {
                    <strong>Price</strong>
                }
                else
                {
                    <a href="@Url.SetParameter("sort", "price")">Price</a>
                }
                |
                @if (Model.Search.Sort.NotNullAnd(s => s.StartsWith("random")))
                {
                    <strong>Random</strong>
                }
                else
                {
                    <a href="@Url.SetParameter("sort", "random_" + Html.RandomNumber())">Random</a>
                }
            </div>

            <div class="container-fluid">
                @foreach (var p in Model.Products)
                {
                    <div class="product">
                        <hr>
                        <div class="productName"> @p.Name </div>
                        Id: @p.Id
                        <label>Price:</label><span class="price"> @p.Price.ToString("C") </span><br />
                        Categories: @foreach (var item in p.Products)
                        {
                            <span class="label label-warning"><a href="@Url.SetParameter("f_cat", item)">@item</a></span>
                        }
                    </div>
                }
            </div>
            <hr>
            <div class="row">
                <div class="col-md-6">
                    @Html.Partial("Pagination", new PaginationInfo
                    {
                       PageUrl = Url.SetParameter("page", "!0"),
                       CurrentPage = Model.Search.PageIndex,
                       PageSize = Model.Search.PageSize,
                       TotalItemCount = Model.TotalCount
                   })
                </div>

                <div class="col-md-6">
                    @foreach (var item in new[] { 5, 10, 20 })
                    {
                        if (Model.Search.PageSize != item)
                        {
                            <a href="@Url.SetParameter("pagesize", item)">@item</a>
                        }
                        else
                        {
                            <strong>@item</strong>
                        }
                    }
                    items per page
                </div>
            </div>
        </div>
    </div>
</div>
