﻿@*@model Catalog.Models.ProductView
@using Catalog.Helpers*@

<div class="container" ng-controller="homeCtrl">
    <div class="row">
        <div class="col-lg-12">
            <form action="/" method="get">
                <div class="form-group">
                    <div class="input-group typeahead-wide">
                        <input type="text" name="q" autocomplete="off" class="form-control input-lg hidden-print" placeholder="Search" ng-model="selected" typeahead="state for state in states | filter:$viewValue | limitTo:8">
                        <div class="input-group-btn">
                            <button type="submit" class="btn btn-success btn-lg"><i class="fa fa-search"></i></button>
                        </div>
                    </div>
                </div>
                <div ng-app="checkbox">
                    <input type="text" name="fq" ng-model="array_" />
                </div>
            </form>
            <label>Filter by: State's produce</label>
            <div ng-app="checkbox">
                <div ng-repeat="item in list">
                    <input type="checkbox" checkbox-group />
                    <label>{{item.value}}</label>
                </div>{{array}}
                <br>{{update()}}
            </div>
        </div>
    </div>
</div>
@section script{
<script>
    angular.module('catalog.demo', ['ui.bootstrap']);
    angular.module('catalog.demo').controller('PaginationDemoCtrl', function ($scope, $log) {
        $scope.totalItems = 64;
        $scope.currentPage = 4;

        $scope.setPage = function (pageNo) {
            $scope.currentPage = pageNo;
        };

        $scope.pageChanged = function () {
            $log.log('Page changed to: ' + $scope.currentPage);
        };

        $scope.maxSize = 5;
        $scope.bigTotalItems = 175;
        $scope.bigCurrentPage = 1;
    }).controller('CollapseDemoCtrl', function ($scope) {
        $scope.isCollapsed = true;
    }).controller('homeCtrl', function ($scope) {
        //Start: Typeahead stuff
        $scope.selected = undefined;
        $scope.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];
        //End

        $scope.array = [1, 5];
        $scope.array_ = angular.copy($scope.array);
        $scope.list = [{            
            "id": 1,
            "value": "apples",
        }, {
            "id": 3,
            "value": "oranges",
        }, {
            "id": 5,
            "value": "pears"
        }];

        $scope.update = function () {
            if ($scope.array.toString() !== $scope.array_.toString()) {
                return "Changed";
            } else {
                return "Not Changed";
            }
        };

    })
    .directive("checkboxGroup", function () {
        return {
            restrict: "A",
            link: function (scope, elem, attrs) {
                // Determine initial checked boxes
                if (scope.array.indexOf(scope.item.id) !== -1) {
                    elem[0].checked = true;
                }

                // Update array on click
                elem.bind('click', function () {
                    var index = scope.array.indexOf(scope.item.id);
                    // Add if checked
                    if (elem[0].checked) {
                        if (index === -1) scope.array.push(scope.item.id);
                    }
                        // Remove if unchecked
                    else {
                        if (index !== -1) scope.array.splice(index, 1);
                    }
                    // Sort and update DOM display
                    scope.$apply(scope.array.sort(function (a, b) {
                        return a - b
                    }));
                });
            }
        }
    });
</script>
}