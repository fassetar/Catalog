@model Catalog.Models.ProductView
<div class="git-ribbon hidden-print">
    <a href="http://github.com/fassetar/catalog-demo" rel="me">Find on GitHub</a>
</div>
<div class="container" ng-controller="homeCtrl">
    <div class="row">
        <div class="col-lg-12">
            <form action="/" method="get">
                <div class="form-group">
                    <div class="input-group typeahead-wide input-group-lg">
                        <div class="input-group-btn">
                            <button type="submit" class="btn btn-success btn-lg"><i class="fa fa-search"></i></button>
                        </div>
                        <input type="text" name="q" autocomplete="off" class="form-control hidden-print" placeholder="Search" ng-model="selected" typeahead="state for state in states | filter:$viewValue | limitTo:8">
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <label>Filter by: State's produce <span class="label label-default" ng-bind="update() ? 'changed' : 'unchange' "></span></label>
                        <div>
                            <input type="checkbox" ng-click="allNeedsClicked()" ng-checked="allNeedsMet()" />All
                            <ul ng-repeat="item in items">
                                <li class="list-unstyled"><input type="checkbox" ng-model="item.flag" />{{item.value}}</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div ng-repeat="item in items">
                    <input hidden type="text" name="fq" ng-model="item.value" ng-if="item.flag" />
                </div>
            </form>
        </div>
    </div>
    <div id="grid1" ui-grid="{ data: myData }" class="grid"></div>
</div>
    @foreach (var p in Model.Products)
    {
        <div class="product">
            <hr>
            <div class="productName"> @p.Name </div>
            Id: @p.Id
            @if (p.Price != null)
            {
                <label>Price:</label><span class="price"> @p.Price.ToString("C") </span><br />
            }
        </div>
    }
    @section script{
        <script>
            angular.module('catalog.demo', ['ui.bootstrap','ui.grid']).controller('homeCtrl', function ($scope) {
                //Bootstrap Mobile
                $scope.isCollapsed = true;

                //Start: Typeahead stuff
                $scope.selected = undefined;
                $scope.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];
                //End

                //Filter
                $scope.items = [{
                    value: "Apples",
                    flag: false
                }, {
                    value: "Oranges",
                    flag: false
                }, {
                    value: "Pears",
                    flag: false
                }];
                $scope.itemsUnchanged = angular.copy($scope.items);

                $scope.allNeedsClicked = function () {
                    var newValue = !$scope.allNeedsMet();
                    for (var i = 0; i < $scope.items.length; i++) {
                        $scope.items[i].flag = newValue;
                    }
                };

                $scope.allNeedsMet = function () {
                    var needsMet = [];
                    for (var i = 0; i < $scope.items.length; i++) {
                        if ($scope.items[i].flag === true)
                            needsMet.push(true);
                    }
                    return (needsMet.length === $scope.items.length);
                };

                $scope.update = function () {
                    //test if equal and not changed, ande return true is updated/changed.
                    return !angular.equals($scope.items, $scope.itemsUnchanged);
                };

                $scope.url = function () {
                    var values = [];
                    angular.forEach($scope.items, function (key, value) {
                        if (key.flag)
                            url.push(key.value);
                    });
                    return (values.toString()) ? "" : this;
                };

                $scope.myData = [{ name: "Moroni", age: 50 },
                     { name: "Tiancum", age: 43 },
                     { name: "Jacob", age: 27 },
                     { name: "Nephi", age: 29 },
                     { name: "Enos", age: 34 }];
                $scope.gridOptions = { data: 'myData' };
            });
        </script>
    }
