<div class="git-ribbon">
    <a href="http://github.com/fassetar/catalog-demo" rel="me">Fork on GitHub</a>
</div>
<div class="container" ng-controller="homeCtrl">
    <div class="row">
        <div class="col-lg-12">
            <form action="/" method="get">
                <div class="form-group">
                    <div class="input-group typeahead-wide">
                        <input type="text" name="q" autocomplete="off" class="form-control input-lg hidden-print" placeholder="Search" ng-model="selected" typeahead="state for state in states | filter:$viewValue | limitTo:8">
                        <div class="input-group-btn">
                            <button type="submit" class="btn btn-success btn-lg"><i class="fa fa-search"></i></button>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        @*TODO: (research) using ng-model doesn't work here?*@
                        @*My theory is that the model is setting the value where bind is just listening.*@
                        <label>Filter by: State's produce <span class="label label-default" ng-bind="update() ? 'changed' : 'unchange' "></span></label>
                        <div>
                            <input type="checkbox" ng-click="allNeedsClicked()" ng-checked="allNeedsMet()" />All
                            <ul ng-repeat="item in items">
                                <li class="list-unstyled"><input type="checkbox" ng-model="item.flag" />{{item.value}}</li>
                            </ul>
                        </div>
                    </div>
                </div>
                @*TODO: call a function in ng-model? below is a temp solution.*@
                @*<input type="text" name="fq" ng-model="url()" />*@
                <div ng-repeat="item in items">
                    <input hidden type="text" name="fq" ng-model="item.value"  ng-if="item.flag"/>
                </div>
            </form>
        </div>
    </div>
</div>
@section script{
<script>
    angular.module('catalog.demo', ['ui.bootstrap']).controller('homeCtrl', function ($scope) {
        //Bootstrap Mobile
        $scope.isCollapsed = true;

        //Start: Typeahead stuff
        $scope.selected = undefined;
        $scope.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];
        //End
        
        //Filter
        $scope.items = [{
            value: "Apples",
            flag: false
        }, {
            value: "Oranges",
            flag: false
        }, {
            value: "Pears",
            flag: false
        }];
        $scope.itemsUnchanged = angular.copy($scope.items);

        $scope.allNeedsClicked = function () {
            var newValue = !$scope.allNeedsMet();
            for (var i = 0; i < $scope.items.length; i++) {
                $scope.items[i].flag = newValue;
            }
        };

        $scope.allNeedsMet = function () {
            var needsMet = [];
            for (var i = 0; i < $scope.items.length; i++) {
                if ($scope.items[i].flag === true)
                    needsMet.push(true);
            }
            return (needsMet.length === $scope.items.length);
        };

        $scope.update = function () {
            //test if equal and not changed, ande return true is updated/changed.
            return !angular.equals($scope.items, $scope.itemsUnchanged);            
        };

        $scope.url = function () {
            var values = [];
            angular.forEach($scope.items, function (key, value) {
                if (key.flag)
                    url.push(key.value);
            });
            return (values.toString()) ? "" : this;
        };
    });

    @*TODO: convert my code into a directive, using this as a example.*@
    // .directive("checkboxGroup", function () {
    //    return {
    //        restrict: "A",
    //        link: function (scope, elem, attrs) {
    //            // Determine initial checked boxes
    //            if (scope.array.indexOf(scope.item.id) !== -1) {
    //                elem[0].checked = true;
    //            }

    //            // Update array on click
    //            elem.bind('click', function () {
    //                var index = scope.array.indexOf(scope.item.id);
    //                // Add if checked
    //                if (elem[0].checked) {
    //                    if (index === -1) scope.array.push(scope.item.id);
    //                }
    //                    // Remove if unchecked
    //                else {
    //                    if (index !== -1) scope.array.splice(index, 1);
    //                }
    //                // Sort and update DOM display
    //                scope.$apply(scope.array.sort(function (a, b) {
    //                    return a - b
    //                }));
    //            });
    //        }
    //    }
    //});
</script>
}